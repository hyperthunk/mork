@prefix : <http://www.nebularis.org/ontologies/mapping/RMLMap> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mork: <http://www.nebularis.org/ontologies/Mork#> .
@prefix zoo: <http://www.nebularis.org/ontologies/Zoo#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rml: <http://w3id.org/rml#> .
@base <http://www.nebularis.org/ontologies/mapping/RMLMap#> .

<http://www.nebularis.org/ontologies/mapping/RMLMap> rdf:type owl:Ontology ;
                                owl:imports <http://www.w3.org/2004/02/skos/core> ;
                                owl:imports <http://www.nebularis.org/ontologies/Mork> .

# this is a Datum, because it implies that a rr:subjectMap will be asserted to fulfil the mapping
# rather than making this a composite of DataMapping (which would infer that every DataMapping is an 
# rml:TriplesMap), we use mork:broaderApplicative to indicate simply that an rml:subjectMap will always
# be asserted in the context of an rml:TriplesMap! This is also true of mork:exactTBoxMatch, which is an
# object property that is always asserted in the context of a DataMapping.
#
# NB: This mapping example is not dealing with the IRI (target) for the subjectMap - that is left as 
# an exercise for the reader, since somehow conceptName or conceptNameTemplate will need to be mapped 
# to the rml:constant or rml:template of the rml:subjectMap. 
#
# NB: Also note that since we are deferring the individual in the a-box that the exactTBoxMatch refers to,
# this mapping is both a DataMapping and a DeferredContext, which means that it can be used to generate
# an rml:TriplesMap, but it also has a deferred context that will be applied when the mapping is processed.
:Map_ExactTBoxMatch rdf:type owl:NamedIndividual , mork:DataMapping , mork:DeferredContext ;
    mork:mappingFor mork:exactTBoxMatch ;
    mork:weighting 90 ;  # you should give each mapping an estimate of your confidence in it
    mork:exactRBoxMatch rml:subjectMap ;  # always give a mappingNote to explain your thinking
    mork:exactABoxMatch mork:DeferredABoxReference ; # we aren't concerned with the thing the exactTBoxMatch refers to.
    mork:deferredMapping :Map_DeferredParent ; # we need to mix-in some mapping behaviour 
    mork:compositeNarrowerMapping :Map_RML_SubjectMap_PredicateObject ; # we have work to do to get the predicate and object
    mork:mappingNote "An exactTBoxMatch indicates the rdf:type (or owl:Class) which a DataMapping suggests for a given target. In RML this is represented by a graph (m:TriplesMap)-[:subjectMap]->(r), (m)-[:predicateObjectMap]->(po), (po)->[:predicate]->(some-rdf:type), (po)->[:objectMap]->(o:'rdf:Resource')" .

:Map_RML_SubjectMap_PredicateObject rdf:type owl:NamedIndividual , mork:Datum ;
    mork:weighting 90 ;
    mork:exactRBoxMatch rr:predicateObjectMap ; 
    mork:compositeNarrowerMapping :Map_RML_SubjectMap_PredicateObject_Predicate, :Map_RML_SubjectMap_PredicateObject_Object ;
    mork:mappingNote "A rml:predicateObjectMap must be generated for the type given in exactTBoxMatch." .

:Map_RML_SubjectMap_PredicateObject_Predicate rdf:type owl:NamedIndividual , mork:Datum ;
    mork:weighting 90 ;
    mork:exactRBoxMatch rml:predicate ;
    mork:exactABoxMatch rdf:type ;
    mork:mappingNote "A rml:predicateObjectMap must have a predicate, which is the rdf:type of the target class." .

:Map_RML_SubjectMap_PredicateObject_Object rdf:type owl:NamedIndividual , mork:Datum ;
    mork:weighting 90 ;
    mork:exactRBoxMatch rml:objectMap ;
    mork:compositeNarrowerMapping :Map_RML_SubjectMap_PredicateObject_Object_Constant ;
    mork:mappingNote "A rml:predicateObjectMap must have an objectMap, which indicates the target class." .

# odd though this is, a Datum with an exactTBoxMatch pointing to an axiom in the R-Box of a knowledge 
# graph indicates that the target output is present not in a triple, but in some other form, such as a
# member of an rdf:List (in this instance), e.g., here we represent [ rml:constant schema:Individual ] 
:Map_RML_SubjectMap_PredicateObject_Object_Constant rdf:type owl:NamedIndividual , mork:Datum ;
    mork:weighting 90 ;
    mork:exactTBoxMatch rml:constant ;
    mork:siblingMapping :Map_DeferredContext ; # this is the rml:subjectMap that we are generating
    mork:mappingNote "A rml:objectMap must have a constant that indicates the target class, which is the same thing that the exactTBoxMatch is pointing to." .

# This mapping simply yields the a-box outcome of the yieldConcept mapping, which is going
# to be whatever the broadTBoxMatch is pointing to in the data we are processing. 
:Map_DeferredContext rdf:type owl:NamedIndividual , mork:DeferredContext ;
    mork:weighting 90 ;
    mork:yieldConcept :Map_ExactTBoxMatch ;
    mork:mappingNote "The Datum resulting from the a-box outcome of the Map_ExactTBoxMatch mapping." .

# Mixing deferredMapping or broaderApplicative with compositeNarrowerMapping can lead to 
# processing confusion, so we use this deferred mapping as a "mix-in" for other mappings to re-use.
# It basically says that the broaderApplicative mapping will be applied via 'inverse compositeNarrowerMapping',
# so if we have (s:DataMapping)->[:exactTBoxMatch]->(o) while we are processing :Map_ExactTBoxMatch, we can
# assume that the outcome of THIS mapping should be applied, which brings the rml:TriplesMap into scope, such
# that the representation we see in the skos:example
:Map_DeferredParent rdf:type owl:NamedIndividual , mork:Datum ;
    mork:broaderApplicative :Map_ParentDataMapping ; # an rml:subjectMap is always a part of an rml:TriplesMap
    mork:inverseRBoxMatch mork:compositeNarrowerMapping ; # we relate to the outcome of the broaderApplicative via this
    mork:mappingNote "Please see the skos:example for this individual" ;
    skos:example """:Mapping_Person rdf:type owl:NamedIndividual , mork:Datum ;
    mork:mappingFor foaf:Person ;
    mork:weighting 90 ; 
    mork:exactTBoxMatch schema:Individual ;
    mork:compositeNarrowerMapping :Mapping_Person_Name ;
    mork:mappingNote \"A foaf:Person correlates with an Individaul in the target vocabulary/schema.\" .

:Mapping_Person_Name rdf:type owl:NamedIndividual , mork:Datum ;
    mork:mappingFor foaf:name ;
    mork:weighting 90 ;
    mork:exactRBoxMatch schema:hasName ;
    mork:mappingNote \"A foaf:name correlates with the 'hasName' object property in the target schema.\" .

# when we generate an RML mapping for the exactTBoxMatch in :Mapping_Person, 
# we should get the following assertions:

:TriplesMap_Person rdf:type rml:TriplesMap .

:TriplesMap_Person rml:predicateObjectMap [
  rml:predicate rdf:type;
  rml:objectMap [ rml:constant schema:Individual ];
] .

:TriplesMap_Person rml:predicateObjectMap [
    rml:predicate schema:hasName ;
    rml:objectMap [ rml:reference \"name\" ; ]
] .""" .

:Map_ParentDataMapping rdf:type owl:NamedIndividual , mork:DataMapping ;
    mork:weighting 90 ; 
    mork:exactTBoxMatch rml:TriplesMap ;
    mork:mappingNote "Indicates that some 'inverse (compositeNarrowerMapping)' mapping leads to creation of an rml:TriplesMap ." .
